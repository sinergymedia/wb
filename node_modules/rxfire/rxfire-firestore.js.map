{"version":3,"file":"rxfire-firestore.js","sources":["firestore/fromRef.ts","node_modules/tslib/tslib.es6.js","firestore/document/index.ts","firestore/collection/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { firestore } from 'firebase/app';\nimport { Observable } from 'rxjs';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _fromRef(ref: any): Observable<any> {\n  return new Observable(subscriber => {\n    const unsubscribe = ref.onSnapshot(subscriber);\n    return { unsubscribe };\n  });\n}\n\nexport function fromRef(\n  ref: firestore.DocumentReference | firestore.Query\n): Observable<{}> {\n  return _fromRef(ref);\n}\n\nexport function fromDocRef(\n  ref: firestore.DocumentReference\n): Observable<firestore.DocumentSnapshot> {\n  return fromRef(ref) as Observable<firestore.DocumentSnapshot>;\n}\n\nexport function fromCollectionRef(\n  ref: firestore.Query\n): Observable<firestore.QuerySnapshot> {\n  return fromRef(ref) as Observable<firestore.QuerySnapshot>;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { firestore } from 'firebase/app';\nimport { fromDocRef } from '../fromRef';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nexport function doc(\n  ref: firestore.DocumentReference\n): Observable<firestore.DocumentSnapshot> {\n  return fromDocRef(ref);\n}\n\n/**\n * Returns a stream of a document, mapped to its data payload and optionally the document ID\n * @param query\n */\nexport function docData<T>(\n  ref: firestore.DocumentReference,\n  idField?: string\n): Observable<T> {\n  return doc(ref).pipe(map(snap => snapToData(snap, idField) as T));\n}\n\nexport function snapToData(\n  snapshot: firestore.DocumentSnapshot,\n  idField?: string\n): {} {\n  return {\n    ...snapshot.data(),\n    ...(idField ? { [idField]: snapshot.id } : null)\n  };\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { firestore } from 'firebase/app';\nimport { fromCollectionRef } from '../fromRef';\nimport { Observable, MonoTypeOperatorFunction } from 'rxjs';\nimport { map, filter, scan } from 'rxjs/operators';\nimport { snapToData } from '../document';\n\nconst ALL_EVENTS: firestore.DocumentChangeType[] = [\n  'added',\n  'modified',\n  'removed'\n];\n\n/**\n * Create an operator that determines if a the stream of document changes\n * are specified by the event filter. If the document change type is not\n * in specified events array, it will not be emitted.\n */\nconst filterEvents = (\n  events?: firestore.DocumentChangeType[]\n): MonoTypeOperatorFunction<firestore.DocumentChange[]> =>\n  filter((changes: firestore.DocumentChange[]) => {\n    let hasChange = false;\n    for (let i = 0; i < changes.length; i++) {\n      const change = changes[i];\n      if (events && events.indexOf(change.type) >= 0) {\n        hasChange = true;\n        break;\n      }\n    }\n    return hasChange;\n  });\n\n/**\n * Create an operator that filters out empty changes. We provide the\n * ability to filter on events, which means all changes can be filtered out.\n * This creates an empty array and would be incorrect to emit.\n */\nconst filterEmpty = filter(\n  (changes: firestore.DocumentChange[]) => changes.length > 0\n);\n\n/**\n * Creates a new sorted array from a new change.\n * @param combined\n * @param change\n */\nfunction processIndividualChange(\n  combined: firestore.DocumentChange[],\n  change: firestore.DocumentChange\n): firestore.DocumentChange[] {\n  switch (change.type) {\n    case 'added':\n      if (\n        combined[change.newIndex] &&\n        combined[change.newIndex].doc.id === change.doc.id\n      ) {\n        // Skip duplicate emissions. This is rare.\n        // TODO: Investigate possible bug in SDK.\n      } else {\n        combined.splice(change.newIndex, 0, change);\n      }\n      break;\n    case 'modified':\n      if (\n        combined[change.oldIndex] == null ||\n        combined[change.oldIndex].doc.id === change.doc.id\n      ) {\n        // When an item changes position we first remove it\n        // and then add it's new position\n        if (change.oldIndex !== change.newIndex) {\n          combined.splice(change.oldIndex, 1);\n          combined.splice(change.newIndex, 0, change);\n        } else {\n          combined[change.newIndex] = change;\n        }\n      }\n      break;\n    case 'removed':\n      if (\n        combined[change.oldIndex] &&\n        combined[change.oldIndex].doc.id === change.doc.id\n      ) {\n        combined.splice(change.oldIndex, 1);\n      }\n      break;\n    default: // ignore\n  }\n  return combined;\n}\n\n/**\n * Combines the total result set from the current set of changes from an incoming set\n * of changes.\n * @param current\n * @param changes\n * @param events\n */\nfunction processDocumentChanges(\n  current: firestore.DocumentChange[],\n  changes: firestore.DocumentChange[],\n  events: firestore.DocumentChangeType[] = ALL_EVENTS\n): firestore.DocumentChange[] {\n  changes.forEach(change => {\n    // skip unwanted change types\n    if (events.indexOf(change.type) > -1) {\n      current = processIndividualChange(current, change);\n    }\n  });\n  return current;\n}\n\n/**\n * Return a stream of document changes on a query. These results are not in sort order but in\n * order of occurence.\n * @param query\n */\nexport function collectionChanges(\n  query: firestore.Query,\n  events: firestore.DocumentChangeType[] = ALL_EVENTS\n): Observable<firestore.DocumentChange[]> {\n  return fromCollectionRef(query).pipe(\n    map(snapshot => snapshot.docChanges()),\n    filterEvents(events),\n    filterEmpty\n  );\n}\n\n/**\n * Return a stream of document snapshots on a query. These results are in sort order.\n * @param query\n */\nexport function collection(\n  query: firestore.Query\n): Observable<firestore.QueryDocumentSnapshot[]> {\n  return fromCollectionRef(query).pipe(map(changes => changes.docs));\n}\n\n/**\n * Return a stream of document changes on a query. These results are in sort order.\n * @param query\n */\nexport function sortedChanges(\n  query: firestore.Query,\n  events?: firestore.DocumentChangeType[]\n): Observable<firestore.DocumentChange[]> {\n  return collectionChanges(query, events).pipe(\n    scan(\n      (\n        current: firestore.DocumentChange[],\n        changes: firestore.DocumentChange[]\n      ) => processDocumentChanges(current, changes, events),\n      []\n    )\n  );\n}\n\n/**\n * Create a stream of changes as they occur it time. This method is similar\n * to docChanges() but it collects each event in an array over time.\n */\nexport function auditTrail(\n  query: firestore.Query,\n  events?: firestore.DocumentChangeType[]\n): Observable<firestore.DocumentChange[]> {\n  return collectionChanges(query, events).pipe(\n    scan(\n      (current, action) => [...current, ...action],\n      [] as firestore.DocumentChange[]\n    )\n  );\n}\n\n/**\n * Returns a stream of documents mapped to their data payload, and optionally the document ID\n * @param query\n */\nexport function collectionData<T>(\n  query: firestore.Query,\n  idField?: string\n): Observable<T[]> {\n  return collection(query).pipe(\n    map(arr => {\n      return arr.map(snap => snapToData(snap, idField) as T);\n    })\n  );\n}\n"],"names":["fromRef","ref","Observable","subscriber","unsubscribe","onSnapshot","fromDocRef","fromCollectionRef","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","doc","snapToData","snapshot","idField","data","id","ALL_EVENTS","filterEvents","events","filter","changes","hasChange","change","indexOf","type","filterEmpty","collectionChanges","query","pipe","map","docChanges","collection","docs","scan","current","action","arr","snap","forEach","combined","newIndex","splice","oldIndex","processIndividualChange"],"mappings":"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"}